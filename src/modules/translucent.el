;; 当前窗口和非当前窗口时透明度
(setq translucent-pair '(80 60))

(setq alpha-list `(,translucent-pair (100 100)))
(defun translucent ()
  (interactive)
  (let* ((h (car alpha-list))
         (a (car h))
         (ab (car (cdr h))))
    (set-frame-parameter (selected-frame) 'alpha (list a ab))
    (add-to-list 'default-frame-alist (cons 'alpha (list a ab)))
    (setq alpha-list (cdr (append alpha-list (list h))))))
(global-set-key (kbd "<f9>") 'translucent)

(setq alpha-list-off `((100 100) ,translucent-pair))
(defun translucent-off ()
  (interactive)
  (let* ((h (car alpha-list-off))
         (a (car h))
         (ab (car (cdr h))))
    (set-frame-parameter (selected-frame) 'alpha (list a ab))
    (add-to-list 'default-frame-alist (cons 'alpha (list a ab)))))

(setq alpha-list-on `(,translucent-pair (100 100)))
(defun translucent-on ()
  (interactive)
  (let* ((h (car alpha-list-on))
         (a (car h))
         (ab (car (cdr h))))
    (set-frame-parameter (selected-frame) 'alpha (list a ab))
    (add-to-list 'default-frame-alist (cons 'alpha (list a ab)))))

;; (translucent-on)
(translucent-off)
